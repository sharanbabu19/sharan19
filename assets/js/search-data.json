{
  
    
        "post0": {
            "title": "Html (5q9) Bts",
            "content": "Scripting in HTML . 1) Basic Program . &lt;html&gt; . &lt;head&gt; . &lt;title&gt; My first Js program&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;center&gt; . &lt;script type=”text/javascript”&gt; . document.write(“Welcome to the browser using Js”;) . &lt;/center&gt; . &lt;/body&gt; . &lt;/html&gt; . 2) Addition . &lt;html&gt;&lt;head&gt;&lt;title&gt; Add with Js&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;center&gt; . &lt;script type=”text/javascript”&gt; . var a,b,c; var string; . a=2; b=3; c=a+b; . string = “the result=”; . document.write(“Addition result”+”&lt;br&gt;”); . document.write(c); . &lt;/script&gt; . 3) Subtraction . &lt;html&gt;&lt;head&gt;&lt;title&gt; Subtract with Js&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;center&gt; . &lt;script type=”text/javascript”&gt; . var a,b,c; var string; . a=3; b=3; c=a-b; . string = “the result=”; . document.write(“Subtraction result”+”&lt;br&gt;”); . document.write(c); . &lt;/script&gt; . 4) Largest Number . &lt;html&gt;&lt;head&gt;&lt;title&gt; Finding Largest Number&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;center&gt; . &lt;script type=”text/javascript”&gt; . var a,b,c; . a=10; b=20;c=30; . if(a&gt;b) . {if(a&gt;c){document.write(“&lt;h1&gt; a is the largest number&lt;/h1&gt;; . else . {document.write(“&lt;h2&gt; c is the largest number &lt;/h2&gt;”);}} . else . {if (b&gt;0) . {document.write(“&lt;h2&gt; b is the largest number &lt;/h2&gt;”);} . Else . {document.write(“&lt;h2&gt; c is the largest number &lt;/h2&gt;”);}} . &lt;/script&gt; . &lt;/body&gt; . &lt;/html&gt; . 5) Table of Squared numbers . &lt;html&gt; . &lt;head&gt;&lt;title&gt; Squaring Numbers&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;table border=1 align=”center”&gt; . &lt;th&gt; Number &lt;/th&gt; &lt;th&gt; Square &lt;/th&gt; . &lt;script type=”text/javascript”&gt; . var i=1; . while(i&lt;=10) . {document.write(“&lt;tr&gt;&lt;td&gt;” +i+”&lt;/td&gt;&lt;td&gt;” + (i*i) + “&lt;/td&gt; &lt;/tr&gt;”); . i++;} . &lt;/script&gt; . &lt;/body&gt; . &lt;/html&gt; . 6) Table of Squared numbers with For Loop . &lt;html&gt; . &lt;head&gt;&lt;title&gt; Squaring Numbers with For Loop&lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;table border=1 align=”center”&gt; . &lt;th&gt; Number &lt;/th&gt; &lt;th&gt; Square &lt;/th&gt; . &lt;script type=”text/javascript”&gt; . var i; . for(i=1; i&lt;=10; i++) . {document.write(“&lt;tr&gt;&lt;td&gt;” +i+”&lt;/td&gt;&lt;td&gt;” + (i*i) + “&lt;/td&gt; &lt;/tr&gt;”);} . &lt;/script&gt; . &lt;/body&gt; . &lt;/html&gt; . 7) Switch Case Js scripting in HTML . &lt;html&gt; . &lt;head&gt;&lt;title&gt; Using Switch in Js &lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;script type= “text/javascript”&gt; . D = new Data(); . Ch = d.getDays(); . Switch(ch) . { . case 1: document.write(“Sunday”); . break; . case 2: document.write(“Monday”); . break; . case 3: document.write(“Tuesday”); . break; . case 4: document.write(“Wednesday”); . break; . case 5: document.write(“Thursday”); . break; . case 6: document.write(“Friday”); . break; . case 7: document.write(“Saturday”); . break;} . &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; . 8) Array . &lt;html&gt; . &lt;head&gt;&lt;title&gt; arrays &lt;/title&gt;&lt;/head&gt; . &lt;body&gt; . &lt;script type= “text/javascript”&gt; . A = new Array(5); . for(i=0; i&lt;5; i++) . { A[i] = i; . document.write(‘another way of initialization’); . b = new Array(22, 43, 56, 74, 84); . for(i=0;i&lt;5;i++) . { . document.write(b[i] + “&lt;br&gt;”); . } . document.write(“yet another way of initialization”); . var c= new Array(8, 16, 24, 32, 40); . for(i&lt;0;i&lt;5;i++) { . document.write(c[i]); } . document.write(“finish”); . &lt;/script&gt; . &lt;/body&gt; . &lt;/html&gt; .",
            "url": "https://sharanbabu19.github.io/sharan19/2020/10/04/html-(5Q9)-bts.html",
            "relUrl": "/2020/10/04/html-(5Q9)-bts.html",
            "date": " • Oct 4, 2020"
        }
        
    
  
    
  
    
  
    
        ,"post3": {
            "title": "Flattening Nested Lists In Python",
            "content": "list_of_lists = [[1], [2, 3], [4, 5, 6]] sum(list_of_lists, []) ==&gt; [1, 2, 3, 4, 5, 6] .",
            "url": "https://sharanbabu19.github.io/sharan19/2020/09/24/Flattening-nested-lists-in-Python.html",
            "relUrl": "/2020/09/24/Flattening-nested-lists-in-Python.html",
            "date": " • Sep 24, 2020"
        }
        
    
  
    
  
    
        ,"post5": {
            "title": "SweetViz",
            "content": "## Package is a collection of modules. ## Library is a collection of Packages. . Hi there. Today, we are going to see how to use SweetViz library in Python which will enable us to perform powerful Exploratory Data Analysis(EDA) on your dataset. So,let&#39;s get started. . First, you will have to pip install this package as it is not an in-built Python package. You can do so from the command prompt or using !pip install sweetviz from jupyter notebook environment. . I will be using USA Housing data in this example. . !pip install sweetviz . Collecting sweetviz Downloading https://files.pythonhosted.org/packages/8f/bd/f4454adfe1d3bbd04892d6172348ca215fa62d59fb09c1ac6b8a233341d3/sweetviz-1.0a7-py3-none-any.whl (323kB) Requirement already satisfied: scipy&gt;=1.3.2 in c: users sharan babu anaconda3 lib site-packages (from sweetviz) (1.4.1) Collecting tqdm&gt;=4.43.0 (from sweetviz) Downloading https://files.pythonhosted.org/packages/f3/76/4697ce203a3d42b2ead61127b35e5fcc26bba9a35c03b32a2bd342a4c869/tqdm-4.46.1-py2.py3-none-any.whl (63kB) Collecting pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3 (from sweetviz) Downloading https://files.pythonhosted.org/packages/1d/eb/b4f68f54ad287d583c9c3b3c77f865615f832f092810f20d2b44498cd06c/pandas-1.0.4-cp37-cp37m-win_amd64.whl (8.7MB) Collecting matplotlib&gt;=3.1.3 (from sweetviz) Downloading https://files.pythonhosted.org/packages/b4/4d/8a2c06cb69935bb762738a8b9d5f8ce2a66be5a1410787839b71e146f000/matplotlib-3.2.1-cp37-cp37m-win_amd64.whl (9.2MB) Collecting importlib-resources&gt;=1.2.0 (from sweetviz) Downloading https://files.pythonhosted.org/packages/b6/03/1865fdd49ec9a938f9f84b255d3d37863df9fbd18b48c1c3f761040cbf13/importlib_resources-2.0.0-py2.py3-none-any.whl Collecting jinja2&gt;=2.11.1 (from sweetviz) Downloading https://files.pythonhosted.org/packages/30/9e/f663a2aa66a09d838042ae1a2c5659828bb9b41ea3a6efa20a20fd92b121/Jinja2-2.11.2-py2.py3-none-any.whl (125kB) Requirement already satisfied: numpy&gt;=1.16.0 in c: users sharan babu anaconda3 lib site-packages (from sweetviz) (1.16.4) Requirement already satisfied: pytz&gt;=2017.2 in c: users sharan babu anaconda3 lib site-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3-&gt;sweetviz) (2019.1) Requirement already satisfied: python-dateutil&gt;=2.6.1 in c: users sharan babu anaconda3 lib site-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3-&gt;sweetviz) (2.8.0) Requirement already satisfied: kiwisolver&gt;=1.0.1 in c: users sharan babu anaconda3 lib site-packages (from matplotlib&gt;=3.1.3-&gt;sweetviz) (1.1.0) Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in c: users sharan babu anaconda3 lib site-packages (from matplotlib&gt;=3.1.3-&gt;sweetviz) (2.4.0) Requirement already satisfied: cycler&gt;=0.10 in c: users sharan babu anaconda3 lib site-packages (from matplotlib&gt;=3.1.3-&gt;sweetviz) (0.10.0) Requirement already satisfied: zipp&gt;=0.4; python_version &lt; &#34;3.8&#34; in c: users sharan babu anaconda3 lib site-packages (from importlib-resources&gt;=1.2.0-&gt;sweetviz) (0.5.1) Requirement already satisfied: importlib-metadata; python_version &lt; &#34;3.8&#34; in c: users sharan babu anaconda3 lib site-packages (from importlib-resources&gt;=1.2.0-&gt;sweetviz) (0.17) Requirement already satisfied: MarkupSafe&gt;=0.23 in c: users sharan babu anaconda3 lib site-packages (from jinja2&gt;=2.11.1-&gt;sweetviz) (1.1.1) Requirement already satisfied: six&gt;=1.5 in c: users sharan babu anaconda3 lib site-packages (from python-dateutil&gt;=2.6.1-&gt;pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3-&gt;sweetviz) (1.12.0) Requirement already satisfied: setuptools in c: users sharan babu anaconda3 lib site-packages (from kiwisolver&gt;=1.0.1-&gt;matplotlib&gt;=3.1.3-&gt;sweetviz) (41.0.1) Installing collected packages: tqdm, pandas, matplotlib, importlib-resources, jinja2, sweetviz Found existing installation: tqdm 4.32.1 Uninstalling tqdm-4.32.1: Successfully uninstalled tqdm-4.32.1 Found existing installation: pandas 0.24.2 Uninstalling pandas-0.24.2: Successfully uninstalled pandas-0.24.2 Found existing installation: matplotlib 3.1.0 Uninstalling matplotlib-3.1.0: Successfully uninstalled matplotlib-3.1.0 Found existing installation: Jinja2 2.10.1 Uninstalling Jinja2-2.10.1: Successfully uninstalled Jinja2-2.10.1 Successfully installed importlib-resources-2.0.0 jinja2-2.11.2 matplotlib-3.2.1 pandas-1.0.4 sweetviz-1.0a7 tqdm-4.46.1 . import numpy as np import pandas as pd import sweetviz . df = pd.read_csv(r&quot;C: Users Sharan Babu Desktop Data science original Refactored_Py_DS_ML_Bootcamp-master 11-Linear-Regression USA_housing.csv&quot;) . df.head() # In this dataset, price column is the target feature or dependent variable. . Avg. Area Income Avg. Area House Age Avg. Area Number of Rooms Avg. Area Number of Bedrooms Area Population Price Address . 0 79545.458574 | 5.682861 | 7.009188 | 4.09 | 23086.800503 | 1.059034e+06 | 208 Michael Ferry Apt. 674 nLaurabury, NE 3701... | . 1 79248.642455 | 6.002900 | 6.730821 | 3.09 | 40173.072174 | 1.505891e+06 | 188 Johnson Views Suite 079 nLake Kathleen, CA... | . 2 61287.067179 | 5.865890 | 8.512727 | 5.13 | 36882.159400 | 1.058988e+06 | 9127 Elizabeth Stravenue nDanieltown, WI 06482... | . 3 63345.240046 | 7.188236 | 5.586729 | 3.26 | 34310.242831 | 1.260617e+06 | USS Barnett nFPO AP 44820 | . 4 59982.197226 | 5.040555 | 7.839388 | 4.23 | 26354.109472 | 6.309435e+05 | USNS Raymond nFPO AE 09386 | . Analyzing a DataFrame . analysis = sweetviz.analyze([df,&quot;EDA&quot;], target_feat=&#39;Price&#39;) . :FEATURES DONE: |█████████████████████| [100%] 00:06 -&gt; (00:00 left) :PAIRWISE DONE: |█████████████████████| [100%] 00:00 -&gt; (00:00 left) . Creating Associations graph... DONE! . type(analysis) . sweetviz.dataframe_report.DataframeReport . analysis.show_html(&#39;EDA.html&#39;) . This is an amazing visualization library for your data as you instantly get various insights into your data which you could have done manually but would have taken a lot more time. For numerical features, you get point plot, histogram, number of value missing, number of distinct values, quartile values and more useful information like skewness of the column. For categorical features, along with the number of distinct and missing values, you Additionally, you also get the the &#39;Associations&#39; or pair-wise correlations between 2 variables which is helpful for determining feature importance. . You can also use this library to comapre two DataFrames,say, your Training set and Test set and infer some meaning from the comparison. . train = df[:3000] . test = df[3000:] . # Consider &#39;test&#39; to be the Test data. # The command to perform EDA comparison is: analysis = sweetviz.compare([train,&quot;Train&quot;],[test,&quot;Test&quot;], &quot;Price&quot;) # Price is the target variable common to both tables # Now you can view your results. analysis.show_html(&#39;EDA2.html&#39;) . :FEATURES DONE: |█████████████████████| [100%] 00:08 -&gt; (00:00 left) :PAIRWISE DONE: |█████████████████████| [100%] 00:00 -&gt; (00:00 left) . Creating Associations graph... DONE! . Now, you can see comparison between the Train and Test dataset differentiate by different colors for all paramters discussed above. Therefore, this is a handy module .",
            "url": "https://sharanbabu19.github.io/sharan19/2020/09/19/SweetViz-Automated-EDA.html",
            "relUrl": "/2020/09/19/SweetViz-Automated-EDA.html",
            "date": " • Sep 19, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi there, I am Sharan 👋 . I am an aspiring Data Scientist pursuing an undergraduate degree in Computer Science. . ⚡ Curiously exploring the depths of Deep Learning and SOTA models. | :man_technologist: I’m currently working on DeHazing Images. | 🌱 Currently learning Deep Learning. | :smile: Looking to collaborate on ML/Data Science Projects. | 💬 Let’s talk about Hackathons, Machine Learning or Computer Vision. | :mailbox_with_mail: Email: sharanbabu2001@gmail.com | . Know more: . Github | LinkedIn | Portfolio | Medium | Resume | Youtube .",
          "url": "https://sharanbabu19.github.io/sharan19/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sharanbabu19.github.io/sharan19/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}